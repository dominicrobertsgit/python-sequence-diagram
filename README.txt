# HOW TO USE IT
1. Find the function where you want to create a sequence diagram from when it runs
    - Let's assume this is c:\my_project\main.py with a function called "main()"
2. Copy autogenerate_sequence_diagram.py to the same directory
    - E.g. autogenerate_sequence_diagram.py now lives at 
    c:\my_project\autogenerate_sequence_diagram.py
3. Add "import autogenerate_sequence_diagram" to the top of the file with the 
function you want to generate the sequence diagram from when it runs
    - E.g. c:\my_project\main.py now has "import autogenerate_sequence_diagram" 
at the top of it
4. Find the function that calls your chosen function and use the following context 
manager
    - E.g.  def main():
                mr_instance = mr_module.mr_class()
                mr_instance.do()

            if __name__ == "__main__":
                with autogenerate_sequence_diagram.AutogeneratedSequenceDiagram(top_file_name=os.path.basename(__file__),
                                                                                top_level_directory_path="c:\\my_project"):
                    main()
5. Your code is now set up correctly but we need to install a couple of things
6. Do the following terminal command
    - "pip install wrapt"
7. Install umlet to the default installation or download standalone version of umlet and drop it into the same directory as autogenerate_sequence_diagram.py
    - E.g. Download https://www.umlet.com/download/umlet_14_3/umlet-standalone-14.3.0.zip and unzip it to c:\my_project\

# NOTES
- Does not yet deal with correctly creating the sequence diagram while you are 
debugging
- The version of umlet shouldn't matter if you have it as a non-standalone 
install but it currently does if you ARE using a standalone version because the 
version of umlet is hard-coded into a string
    - Why? Because it was simpler to code and easier if someone uses 7zip to 
    unzip to the directory

# LICENCE
- Licences are ridiculous but here we go, this uses the MIT licence yadda yadda 
yadda, see LICENCE
